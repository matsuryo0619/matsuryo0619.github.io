window.addEventListener('headerSearchCreated',async()=>{const{accounts_parent}=await import('./header.js');const Make_accounts=document.getElementById('header_Toaccounts');const login=document.getElementById('header_Tologin');const urlParams=new URLSearchParams(window.location.search);const GOOGLE_SHEET_CSV_URL='https://docs.google.com/spreadsheets/d/1E0MjL8CXf-_pF3Lf1K1-w0pMx3EEaLO_zimIPpIkkPk/export?format=csv&range=A1:D';if(!localStorage.getItem('account')){accounts_parent.style.display='none';if(window.location.origin+window.location.pathname==='https://matsuryo0619.github.io/scratchblog/accounts.html'){if(urlParams.get('type')==='make'){document.title='アカウントを作成 - スゴスク!';const form=document.createElement('form');form.action='https://docs.google.com/forms/d/e/1FAIpQLSczgHouSE1zLsfoT7M7O9p3iReQt1p9t3tlXIoxBMqShvrz1g/formResponse';form.method='post';form.id='accounts_form';form.target='hidden_iframe';const saltInput=document.createElement('input');saltInput.type='hidden';saltInput.name='entry.155315392';form.appendChild(saltInput);const hashedPasswordInput=document.createElement('input');hashedPasswordInput.type='hidden';hashedPasswordInput.name='entry.1949907076';form.appendChild(hashedPasswordInput);async function checkDuplicateAccount(username){try{const timestamp=new Date().getTime();const csvUrl=`${GOOGLE_SHEET_CSV_URL}&_t=${timestamp}`;const existingAccounts=await d3.csv(csvUrl);const possibleAccountNameColumns=['アカウント名','ユーザー名','Account Name','Username'];let accountNameColumn=null;let isDuplicate=!1;if(existingAccounts.length>0){const availableColumns=Object.keys(existingAccounts[0]);accountNameColumn=possibleAccountNameColumns.find(col=>availableColumns.includes(col));if(!accountNameColumn&&availableColumns.length>=2){accountNameColumn=availableColumns[1]} if(accountNameColumn){isDuplicate=existingAccounts.some(row=>{const existingUsername=row[accountNameColumn];return existingUsername&&existingUsername.toString().trim().toLowerCase()===username.trim().toLowerCase()})}} return isDuplicate}catch(error){console.error('重複チェックエラー:',error);throw new Error('アカウント名の重複チェックに失敗しました。しばらく待ってから再試行してください。')}} form.onsubmit=async function(event){event.preventDefault();const AccountNameInput=document.getElementById('Account_Name');const AccountPassInput=document.getElementById('Accounts_wcheck');const AccountPassConfirmInput=document.getElementById('Accounts_wcheck_confirm');const password=AccountPassInput.value;const confirmPassword=AccountPassConfirmInput.value;const username=AccountNameInput.value;if(!password||!username||!confirmPassword){alert('すべての項目を入力してください！');return!1} if(password!==confirmPassword){alert('パスワードが一致しません！');return!1} if(username.length<3||username.length>20){alert('アカウント名は3文字以上20文字以下で入力してください！');return!1} if(!/^[a-zA-Z0-9_]+$/.test(username)){alert('アカウント名は英数字とアンダースコア(_)のみ使用できます！');return!1} if(password.length<6){alert('パスワードは6文字以上で入力してください！');return!1} const submitButton=document.getElementById("submitbutton");submitButton.disabled=!0;submitButton.value="確認中...";try{const isDuplicate=await checkDuplicateAccount(username);if(isDuplicate){alert('そのアカウント名はすでに使われています。別のアカウント名を入力してください！');submitButton.disabled=!1;submitButton.value="登録";return!1} await new Promise(resolve=>setTimeout(resolve,500));const isDuplicateSecond=await checkDuplicateAccount(username);if(isDuplicateSecond){alert('そのアカウント名はすでに使われています。別のアカウント名を入力してください！');submitButton.disabled=!1;submitButton.value="登録";return!1} submitButton.value="登録中...";const saltBytes=window.crypto.getRandomValues(new Uint8Array(16));const salt=Array.from(saltBytes).map(b=>b.toString(16).padStart(2,'0')).join('');saltInput.value=salt;const combined=password+salt;const encoder=new TextEncoder();const dataToHash=encoder.encode(combined);const hashBuffer=await crypto.subtle.digest('SHA-256',dataToHash);const hashArray=Array.from(new Uint8Array(hashBuffer));const hashedPassword=hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');hashedPasswordInput.value=hashedPassword;AccountPassInput.value='';AccountPassConfirmInput.value='';document.getElementById('hidden_iframe').onload=function(){alert('アカウントの登録が完了しました！');submitButton.disabled=!1;submitButton.value="登録";form.reset();localStorage.setItem('account',username);const sessionToken=secureAuth.generateSessionToken();secureAuth.setAuthData(username,sessionToken);window.location.replace('https://matsuryo0619.github.io/scratchblog/Home.html')};form.submit()}catch(error){console.error('登録処理エラー:',error);alert(error.message||'処理中にエラーが発生しました。もう一度試してみてください！');submitButton.disabled=!1;submitButton.value="登録";return!1}};const AccountName_P=document.createElement('p');const AccountName=document.createElement('input');AccountName.type='text';AccountName.autocomplete='username';AccountName.name='entry.159289474';AccountName.placeholder='アカウント名（英数字とアンダースコアのみ）';AccountName.required=!0;AccountName.id='Account_Name';AccountName.maxLength=20;AccountName.minLength=3;AccountName.setAttribute('data-1p-ignore','false');AccountName.setAttribute('data-lpignore','false');AccountName_P.appendChild(AccountName);form.appendChild(AccountName_P);AccountName.addEventListener('focus',function(){this.select()});let checkTimeout;AccountName.addEventListener('input',function(){clearTimeout(checkTimeout);const username=this.value.trim();if(username.length>=3){checkTimeout=setTimeout(async()=>{try{const isDuplicate=await checkDuplicateAccount(username);if(isDuplicate){this.style.borderColor='#ff0000';this.title='このアカウント名は既に使用されています'}else{this.style.borderColor='#00ff00';this.title='このアカウント名は使用できます'}}catch(error){this.style.borderColor='';this.title=''}},1000)}else{this.style.borderColor='';this.title=''}});const AccountPass_P=document.createElement('p');AccountPass_P.style.position='relative';const AccountPass=document.createElement('input');AccountPass.type='password';AccountPass.autocomplete='new-password';AccountPass.name='entry.1949907076';AccountPass.placeholder='パスワード（6文字以上）';AccountPass.required=!0;AccountPass.id='Accounts_wcheck';AccountPass.minLength=6;AccountPass.setAttribute('data-1p-ignore','false');AccountPass.setAttribute('data-lpignore','false');AccountPass.addEventListener('copy',e=>e.preventDefault());AccountPass.addEventListener('paste',e=>e.preventDefault());AccountPass.addEventListener('cut',e=>e.preventDefault());AccountPass.addEventListener('contextmenu',e=>e.preventDefault());AccountPass.style.paddingRight='40px';AccountPass_P.appendChild(AccountPass);const togglePassword1=document.createElement('button');togglePassword1.type='button';togglePassword1.innerHTML='<i class="fa-solid fa-eye"></i>';togglePassword1.style.position='absolute';togglePassword1.style.right='10px';togglePassword1.style.top='50%';togglePassword1.style.transform='translateY(-50%)';togglePassword1.style.border='none';togglePassword1.style.background='transparent';togglePassword1.style.cursor='pointer';togglePassword1.style.fontSize='16px';togglePassword1.title='パスワードを表示/非表示';AccountPass_P.appendChild(togglePassword1);togglePassword1.addEventListener('click',function(){if(AccountPass.type==='password'){AccountPass.type='text';this.innerHTML='<i class="fa-solid fa-eye-slash"></i>'}else{AccountPass.type='password';this.innerHTML='<i class="fa-solid fa-eye"></i>'}});form.appendChild(AccountPass_P);const AccountPassConfirm_P=document.createElement('p');AccountPassConfirm_P.style.position='relative';const AccountPassConfirm=document.createElement('input');AccountPassConfirm.type='password';AccountPassConfirm.autocomplete='new-password';AccountPassConfirm.placeholder='パスワード確認';AccountPassConfirm.required=!0;AccountPassConfirm.id='Accounts_wcheck_confirm';AccountPassConfirm.minLength=6;AccountPassConfirm.setAttribute('data-1p-ignore','false');AccountPassConfirm.setAttribute('data-lpignore','false');AccountPassConfirm.addEventListener('copy',e=>e.preventDefault());AccountPassConfirm.addEventListener('paste',e=>e.preventDefault());AccountPassConfirm.addEventListener('cut',e=>e.preventDefault());AccountPassConfirm.addEventListener('contextmenu',e=>e.preventDefault());AccountPassConfirm.style.paddingRight='40px';AccountPassConfirm_P.appendChild(AccountPassConfirm);const togglePassword2=document.createElement('button');togglePassword2.type='button';togglePassword2.innerHTML='<i class="fa-solid fa-eye"></i>';togglePassword2.style.position='absolute';togglePassword2.style.right='10px';togglePassword2.style.top='50%';togglePassword2.style.transform='translateY(-50%)';togglePassword2.style.border='none';togglePassword2.style.background='transparent';togglePassword2.style.cursor='pointer';togglePassword2.style.fontSize='16px';togglePassword2.title='パスワードを表示/非表示';AccountPassConfirm_P.appendChild(togglePassword2);togglePassword2.addEventListener('click',function(){if(AccountPassConfirm.type==='password'){AccountPassConfirm.type='text';this.innerHTML='<i class="fa-solid fa-eye-slash"></i>'}else{AccountPassConfirm.type='password';this.innerHTML='<i class="fa-solid fa-eye"></i>'}});const passwordMessage=document.createElement('div');passwordMessage.id='password_message';passwordMessage.style.fontSize='14px';passwordMessage.style.marginTop='5px';passwordMessage.style.minHeight='20px';AccountPassConfirm_P.appendChild(passwordMessage);form.appendChild(AccountPassConfirm_P);function checkPasswordMatch(){const password=AccountPass.value;const confirmPassword=AccountPassConfirm.value;const messageDiv=document.getElementById('password_message');if(confirmPassword.length===0){messageDiv.textContent='';AccountPassConfirm.style.borderColor='';return!0} if(password===confirmPassword){messageDiv.textContent='✓ パスワードが一致しています';messageDiv.style.color='#00aa00';AccountPassConfirm.style.borderColor='#00aa00';return!0}else{messageDiv.textContent='✗ パスワードが一致しません';messageDiv.style.color='#ff0000';AccountPassConfirm.style.borderColor='#ff0000';return!1}} AccountPass.addEventListener('input',checkPasswordMatch);AccountPassConfirm.addEventListener('input',checkPasswordMatch);const Submit=document.createElement('input');Submit.type="submit";Submit.id="submitbutton";Submit.value="登録";Submit.setAttribute('data-1p-ignore','false');form.appendChild(Submit);document.body.appendChild(form);const iframe=document.createElement('iframe');iframe.onload='';iframe.id='hidden_iframe';iframe.name='hidden_iframe';iframe.style.display='none';document.body.appendChild(iframe)}else if(urlParams.get('type')==='login'){document.title='ログイン - スゴスク!';async function getAccountData(username){try{const timestamp=new Date().getTime();const csvUrl=`${GOOGLE_SHEET_CSV_URL}&_t=${timestamp}`;const existingAccounts=await d3.csv(csvUrl);const possibleAccountNameColumns=['アカウント名','ユーザー名','Account Name','Username'];if(existingAccounts.length===0){return null} const availableColumns=Object.keys(existingAccounts[0]);const accountNameColumn=possibleAccountNameColumns.find(col=>availableColumns.includes(col))||availableColumns[1];const matchingAccounts=existingAccounts.filter(row=>{const existingUsername=row[accountNameColumn];return existingUsername&&existingUsername.toString().trim().toLowerCase()===username.trim().toLowerCase()});if(matchingAccounts.length===0){return null} const latestAccount=matchingAccounts.reduce((latest,current)=>{const latestTimestamp=new Date(latest.タイムスタンプ||latest.Timestamp||0);const currentTimestamp=new Date(current.タイムスタンプ||current.Timestamp||0);return currentTimestamp>latestTimestamp?current:latest});return{username:latestAccount[accountNameColumn],hashedPassword:latestAccount.ハッシュ化パスワード||latestAccount['Hashed Password'],salt:latestAccount.ソルト||latestAccount.Salt}}catch(error){console.error('アカウントデータ取得エラー:',error);throw new Error('アカウント情報の取得に失敗しました。しばらく待ってから再試行してください。')}} async function verifyPassword(inputPassword,storedHash,salt){try{const combined=inputPassword+salt;const encoder=new TextEncoder();const dataToHash=encoder.encode(combined);const hashBuffer=await crypto.subtle.digest('SHA-256',dataToHash);const hashArray=Array.from(new Uint8Array(hashBuffer));const computedHash=hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');const cleanStoredHash=storedHash.replace(/,\s*$/,'').trim();return computedHash===cleanStoredHash}catch(error){console.error('パスワード検証エラー:',error);return!1}} const loginForm=document.createElement('form');loginForm.id='login_form';loginForm.onsubmit=async function(event){event.preventDefault();const usernameInput=document.getElementById('Login_Username');const passwordInput=document.getElementById('Login_Password');const submitButton=document.getElementById('login_submitbutton');const username=usernameInput.value.trim();const password=passwordInput.value;if(!username||!password){alert('アカウント名とパスワードを両方入力してください！');return!1} submitButton.disabled=!0;submitButton.value="ログイン中...";try{const accountData=await getAccountData(username);if(!accountData){alert('アカウント名またはパスワードが間違っています。');submitButton.disabled=!1;submitButton.value="ログイン";return!1} const isPasswordValid=await verifyPassword(password,accountData.hashedPassword,accountData.salt);if(!isPasswordValid){alert('アカウント名またはパスワードが間違っています。');submitButton.disabled=!1;submitButton.value="ログイン";return!1} localStorage.setItem('account',accountData.username);const sessionToken=secureAuth.generateSessionToken();secureAuth.setAuthData(accountData.username,sessionToken);window.location.replace('https://matsuryo0619.github.io/scratchblog/Home.html')}catch(error){console.error('ログイン処理エラー:',error);alert(error.message||'ログイン処理中にエラーが発生しました。もう一度試してみてください！');submitButton.disabled=!1;submitButton.value="ログイン"}};const usernameP=document.createElement('p');const usernameInput=document.createElement('input');usernameInput.type='text';usernameInput.autocomplete='username';usernameInput.placeholder='アカウント名';usernameInput.required=!0;usernameInput.id='Login_Username';usernameInput.setAttribute('data-1p-ignore','false');usernameInput.setAttribute('data-lpignore','false');usernameP.appendChild(usernameInput);const usernameMessage=document.createElement('div');usernameMessage.id='username_message';usernameMessage.style.fontSize='14px';usernameMessage.style.marginTop='5px';usernameMessage.style.minHeight='20px';usernameP.appendChild(usernameMessage);loginForm.appendChild(usernameP);usernameInput.addEventListener('focus',function(){this.select()});let usernameCheckTimeout;usernameInput.addEventListener('input',function(){clearTimeout(usernameCheckTimeout);const username=this.value.trim();const messageDiv=document.getElementById('username_message');if(username.length===0){messageDiv.textContent='';this.style.borderColor='';return} if(username.length<3){messageDiv.textContent='アカウント名は3文字以上で入力してください';messageDiv.style.color='#888';this.style.borderColor='';return} messageDiv.textContent='確認中...';messageDiv.style.color='#888';this.style.borderColor='';usernameCheckTimeout=setTimeout(async()=>{try{const accountData=await getAccountData(username);if(accountData){messageDiv.textContent='✓ アカウントが見つかりました';messageDiv.style.color='#00aa00';this.style.borderColor='#00aa00'}else{messageDiv.textContent='✗ アカウントは存在しません';messageDiv.style.color='#ff0000';this.style.borderColor='#ff0000'}}catch(error){messageDiv.textContent='確認できませんでした';messageDiv.style.color='#ff6600';this.style.borderColor=''}},800)});const passwordP=document.createElement('p');const passwordInput=document.createElement('input');passwordInput.type='password';passwordInput.autocomplete='current-password';passwordInput.placeholder='パスワード';passwordInput.required=!0;passwordInput.id='Login_Password';passwordInput.setAttribute('data-1p-ignore','false');passwordInput.setAttribute('data-lpignore','false');passwordP.appendChild(passwordInput);loginForm.appendChild(passwordP);const loginSubmit=document.createElement('input');loginSubmit.type="submit";loginSubmit.id="login_submitbutton";loginSubmit.value="ログイン";loginSubmit.setAttribute('data-1p-ignore','false');loginForm.appendChild(loginSubmit);const createAccountP=document.createElement('p');const createAccountLink=document.createElement('a');createAccountLink.href='https://matsuryo0619.github.io/scratchblog/accounts.html?type=make';createAccountLink.textContent='アカウントを作成';createAccountP.appendChild(createAccountLink);loginForm.appendChild(createAccountP);document.body.appendChild(loginForm)}}}else{Make_accounts.style.display='none';login.style.display='none';accounts_parent.querySelector('p').textContent=localStorage.getItem('account');if(window.location.origin+window.location.pathname==='https://matsuryo0619.github.io/scratchblog/accounts.html'){document.title='アカウント設定 - スゴスク!';async function getCurrentAccountData(username){try{const timestamp=new Date().getTime();const csvUrl=`${GOOGLE_SHEET_CSV_URL}&_t=${timestamp}`;const existingAccounts=await d3.csv(csvUrl);const possibleAccountNameColumns=['アカウント名','ユーザー名','Account Name','Username'];if(existingAccounts.length===0){return null} const availableColumns=Object.keys(existingAccounts[0]);const accountNameColumn=possibleAccountNameColumns.find(col=>availableColumns.includes(col))||availableColumns[1];const matchingAccounts=existingAccounts.filter(row=>{const existingUsername=row[accountNameColumn];return existingUsername&&existingUsername.toString().trim().toLowerCase()===username.trim().toLowerCase()});if(matchingAccounts.length===0){return null} const latestAccount=matchingAccounts.reduce((latest,current)=>{const latestTimestamp=new Date(latest.タイムスタンプ||latest.Timestamp||0);const currentTimestamp=new Date(current.タイムスタンプ||current.Timestamp||0);return currentTimestamp>latestTimestamp?current:latest});return{username:latestAccount[accountNameColumn],hashedPassword:latestAccount.ハッシュ化パスワード||latestAccount['Hashed Password'],salt:latestAccount.ソルト||latestAccount.Salt,createdDate:latestAccount.タイムスタンプ||latestAccount.Timestamp}}catch(error){console.error('アカウントデータ取得エラー:',error);return null}} async function verifyCurrentPassword(inputPassword,storedHash,salt){try{const combined=inputPassword+salt;const encoder=new TextEncoder();const dataToHash=encoder.encode(combined);const hashBuffer=await crypto.subtle.digest('SHA-256',dataToHash);const hashArray=Array.from(new Uint8Array(hashBuffer));const computedHash=hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');const cleanStoredHash=storedHash.replace(/,\s*$/,'').trim();return computedHash===cleanStoredHash}catch(error){console.error('パスワード検証エラー:',error);return!1}} const settingsContainer=document.createElement('div');settingsContainer.id='account_settings_container';settingsContainer.style.maxWidth='600px';settingsContainer.style.margin='20px auto';settingsContainer.style.padding='20px';settingsContainer.style.backgroundColor='#f9f9f9';settingsContainer.style.borderRadius='8px';settingsContainer.style.boxShadow='0 2px 10px rgba(0,0,0,0.1)';const title=document.createElement('h2');title.textContent='アカウント設定';title.style.textAlign='center';title.style.marginBottom='30px';title.style.color='#333';settingsContainer.appendChild(title);const accountInfoSection=document.createElement('div');accountInfoSection.style.marginBottom='30px';accountInfoSection.style.padding='15px';accountInfoSection.style.backgroundColor='#fff';accountInfoSection.style.borderRadius='5px';accountInfoSection.style.border='1px solid #ddd';const accountInfoTitle=document.createElement('h3');accountInfoTitle.textContent='アカウント情報';accountInfoTitle.style.marginBottom='15px';accountInfoTitle.style.color='#555';accountInfoSection.appendChild(accountInfoTitle);const currentUsername=localStorage.getItem('account');const usernameInfo=document.createElement('p');usernameInfo.innerHTML=`<strong>アカウント名:</strong> ${currentUsername}`;usernameInfo.style.marginBottom='10px';accountInfoSection.appendChild(usernameInfo);const accountStatus=document.createElement('p');accountStatus.innerHTML='<strong>ステータス:</strong> <span style="color: #00aa00;">ログイン中</span>';accountStatus.style.marginBottom='10px';accountInfoSection.appendChild(accountStatus);const createdDateP=document.createElement('p');createdDateP.innerHTML='<strong>作成日時:</strong> <span id="account_created_date">読み込み中...</span>';createdDateP.style.marginBottom='10px';accountInfoSection.appendChild(createdDateP);settingsContainer.appendChild(accountInfoSection);const passwordChangeSection=document.createElement('div');passwordChangeSection.style.marginBottom='30px';passwordChangeSection.style.padding='15px';passwordChangeSection.style.backgroundColor='#fff';passwordChangeSection.style.borderRadius='5px';passwordChangeSection.style.border='1px solid #ddd';const passwordChangeTitle=document.createElement('h3');passwordChangeTitle.textContent='パスワード変更';passwordChangeTitle.style.marginBottom='15px';passwordChangeTitle.style.color='#555';passwordChangeSection.appendChild(passwordChangeTitle);const passwordForm=document.createElement('form');passwordForm.id='password_change_form';const currentPasswordP=document.createElement('p');const currentPasswordLabel=document.createElement('label');currentPasswordLabel.textContent='現在のパスワード:';currentPasswordLabel.style.display='block';currentPasswordLabel.style.marginBottom='5px';currentPasswordP.appendChild(currentPasswordLabel);const currentPasswordInput=document.createElement('input');currentPasswordInput.type='password';currentPasswordInput.id='current_password';currentPasswordInput.placeholder='現在のパスワードを入力';currentPasswordInput.required=!0;currentPasswordInput.style.width='100%';currentPasswordInput.style.padding='8px';currentPasswordInput.style.border='1px solid #ccc';currentPasswordInput.style.borderRadius='4px';currentPasswordInput.style.boxSizing='border-box';currentPasswordP.appendChild(currentPasswordInput);passwordForm.appendChild(currentPasswordP);const newPasswordP=document.createElement('p');newPasswordP.style.position='relative';const newPasswordLabel=document.createElement('label');newPasswordLabel.textContent='新しいパスワード:';newPasswordLabel.style.display='block';newPasswordLabel.style.marginBottom='5px';newPasswordP.appendChild(newPasswordLabel);const newPasswordInput=document.createElement('input');newPasswordInput.type='password';newPasswordInput.id='new_password';newPasswordInput.placeholder='新しいパスワード（6文字以上）';newPasswordInput.required=!0;newPasswordInput.minLength=6;newPasswordInput.style.width='100%';newPasswordInput.style.padding='8px';newPasswordInput.style.paddingRight='40px';newPasswordInput.style.border='1px solid #ccc';newPasswordInput.style.borderRadius='4px';newPasswordInput.style.boxSizing='border-box';newPasswordP.appendChild(newPasswordInput);const toggleNewPassword=document.createElement('button');toggleNewPassword.type='button';toggleNewPassword.innerHTML='<i class="fa-solid fa-eye"></i>';toggleNewPassword.style.position='absolute';toggleNewPassword.style.right='10px';toggleNewPassword.style.top='30px';toggleNewPassword.style.border='none';toggleNewPassword.style.background='transparent';toggleNewPassword.style.cursor='pointer';toggleNewPassword.style.fontSize='16px';toggleNewPassword.title='パスワードを表示/非表示';newPasswordP.appendChild(toggleNewPassword);toggleNewPassword.addEventListener('click',function(){if(newPasswordInput.type==='password'){newPasswordInput.type='text';this.innerHTML='<i class="fa-solid fa-eye-slash"></i>'}else{newPasswordInput.type='password';this.innerHTML='<i class="fa-solid fa-eye"></i>'}});passwordForm.appendChild(newPasswordP);const confirmNewPasswordP=document.createElement('p');confirmNewPasswordP.style.position='relative';const confirmNewPasswordLabel=document.createElement('label');confirmNewPasswordLabel.textContent='新しいパスワード確認:';confirmNewPasswordLabel.style.display='block';confirmNewPasswordLabel.style.marginBottom='5px';confirmNewPasswordP.appendChild(confirmNewPasswordLabel);const confirmNewPasswordInput=document.createElement('input');confirmNewPasswordInput.type='password';confirmNewPasswordInput.id='confirm_new_password';confirmNewPasswordInput.placeholder='新しいパスワード確認';confirmNewPasswordInput.required=!0;confirmNewPasswordInput.minLength=6;confirmNewPasswordInput.style.width='100%';confirmNewPasswordInput.style.padding='8px';confirmNewPasswordInput.style.paddingRight='40px';confirmNewPasswordInput.style.border='1px solid #ccc';confirmNewPasswordInput.style.borderRadius='4px';confirmNewPasswordInput.style.boxSizing='border-box';confirmNewPasswordP.appendChild(confirmNewPasswordInput);const toggleConfirmNewPassword=document.createElement('button');toggleConfirmNewPassword.type='button';toggleConfirmNewPassword.innerHTML='<i class="fa-solid fa-eye"></i>';toggleConfirmNewPassword.style.position='absolute';toggleConfirmNewPassword.style.right='10px';toggleConfirmNewPassword.style.top='30px';toggleConfirmNewPassword.style.border='none';toggleConfirmNewPassword.style.background='transparent';toggleConfirmNewPassword.style.cursor='pointer';toggleConfirmNewPassword.style.fontSize='16px';toggleConfirmNewPassword.title='パスワードを表示/非表示';confirmNewPasswordP.appendChild(toggleConfirmNewPassword);toggleConfirmNewPassword.addEventListener('click',function(){if(confirmNewPasswordInput.type==='password'){confirmNewPasswordInput.type='text';this.innerHTML='<i class="fa-solid fa-eye-slash"></i>'}else{confirmNewPasswordInput.type='password';this.innerHTML='<i class="fa-solid fa-eye"></i>'}});const newPasswordMessage=document.createElement('div');newPasswordMessage.id='new_password_message';newPasswordMessage.style.fontSize='14px';newPasswordMessage.style.marginTop='5px';newPasswordMessage.style.minHeight='20px';confirmNewPasswordP.appendChild(newPasswordMessage);passwordForm.appendChild(confirmNewPasswordP);function checkNewPasswordMatch(){const newPassword=newPasswordInput.value;const confirmNewPassword=confirmNewPasswordInput.value;const messageDiv=document.getElementById('new_password_message');if(confirmNewPassword.length===0){messageDiv.textContent='';confirmNewPasswordInput.style.borderColor='#ccc';return!0} if(newPassword===confirmNewPassword){messageDiv.textContent='✓ パスワードが一致しています';messageDiv.style.color='#00aa00';confirmNewPasswordInput.style.borderColor='#00aa00';return!0}else{messageDiv.textContent='✗ パスワードが一致しません';messageDiv.style.color='#ff0000';confirmNewPasswordInput.style.borderColor='#ff0000';return!1}} newPasswordInput.addEventListener('input',checkNewPasswordMatch);confirmNewPasswordInput.addEventListener('input',checkNewPasswordMatch);const changePasswordButton=document.createElement('input');changePasswordButton.type='submit';changePasswordButton.id='change_password_button';changePasswordButton.value='パスワードを変更';changePasswordButton.style.backgroundColor='#007bff';changePasswordButton.style.color='white';changePasswordButton.style.padding='10px 20px';changePasswordButton.style.border='none';changePasswordButton.style.borderRadius='5px';changePasswordButton.style.cursor='pointer';changePasswordButton.style.fontSize='16px';changePasswordButton.style.marginTop='10px';passwordForm.appendChild(changePasswordButton);passwordForm.onsubmit=async function(event){event.preventDefault();const currentPassword=currentPasswordInput.value;const newPassword=newPasswordInput.value;const confirmNewPassword=confirmNewPasswordInput.value;if(!currentPassword||!newPassword||!confirmNewPassword){alert('すべての項目を入力してください！');return!1} if(newPassword!==confirmNewPassword){alert('新しいパスワードが一致しません！');return!1} if(newPassword.length<6){alert('新しいパスワードは6文字以上で入力してください！');return!1} if(currentPassword===newPassword){alert('新しいパスワードは現在のパスワードと異なるものを入力してください！');return!1} const submitButton=document.getElementById('change_password_button');submitButton.disabled=!0;submitButton.value='確認中...';try{const accountData=await getCurrentAccountData(currentUsername);if(!accountData){alert('アカウント情報の取得に失敗しました。');submitButton.disabled=!1;submitButton.value='パスワードを変更';return!1} const isCurrentPasswordValid=await verifyCurrentPassword(currentPassword,accountData.hashedPassword,accountData.salt);if(!isCurrentPasswordValid){alert('現在のパスワードが間違っています。');submitButton.disabled=!1;submitButton.value='パスワードを変更';return!1} submitButton.value='変更中...';const saltBytes=window.crypto.getRandomValues(new Uint8Array(16));const newSalt=Array.from(saltBytes).map(b=>b.toString(16).padStart(2,'0')).join('');const combined=newPassword+newSalt;const encoder=new TextEncoder();const dataToHash=encoder.encode(combined);const hashBuffer=await crypto.subtle.digest('SHA-256',dataToHash);const hashArray=Array.from(new Uint8Array(hashBuffer));const newHashedPassword=hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');const updateForm=document.createElement('form');updateForm.action='https://docs.google.com/forms/d/e/1FAIpQLSczgHouSE1zLsfoT7M7O9p3iReQt1p9t3tlXIoxBMqShvrz1g/formResponse';updateForm.method='post';updateForm.target='password_update_iframe';updateForm.style.display='none';const usernameField=document.createElement('input');usernameField.type='hidden';usernameField.name='entry.159289474';usernameField.value=currentUsername;updateForm.appendChild(usernameField);const saltField=document.createElement('input');saltField.type='hidden';saltField.name='entry.155315392';saltField.value=newSalt;updateForm.appendChild(saltField);const passwordField=document.createElement('input');passwordField.type='hidden';passwordField.name='entry.1949907076';passwordField.value=newHashedPassword;updateForm.appendChild(passwordField);document.body.appendChild(updateForm);const updateIframe=document.createElement('iframe');updateIframe.name='password_update_iframe';updateIframe.style.display='none';document.body.appendChild(updateIframe);updateIframe.onload=function(){alert('パスワードが正常に変更されました！');submitButton.disabled=!1;submitButton.value='パスワードを変更';passwordForm.reset();document.body.removeChild(updateForm);document.body.removeChild(updateIframe)};updateForm.submit()}catch(error){console.error('パスワード変更エラー:',error);alert('パスワード変更中にエラーが発生しました。もう一度試してみてください。');submitButton.disabled=!1;submitButton.value='パスワードを変更'}};passwordChangeSection.appendChild(passwordForm);settingsContainer.appendChild(passwordChangeSection);const logoutSection=document.createElement('div');logoutSection.style.marginBottom='30px';logoutSection.style.padding='15px';logoutSection.style.backgroundColor='#fff';logoutSection.style.borderRadius='5px';logoutSection.style.border='1px solid #ddd';const logoutTitle=document.createElement('h3');logoutTitle.textContent='ログアウト';logoutTitle.style.marginBottom='15px';logoutTitle.style.color='#555';logoutSection.appendChild(logoutTitle);const logoutDescription=document.createElement('p');logoutDescription.textContent='このデバイスからログアウトします。再度ログインするにはアカウント名とパスワードが必要です。';logoutDescription.style.marginBottom='15px';logoutDescription.style.color='#666';logoutSection.appendChild(logoutDescription);const logoutButton=document.createElement('button');logoutButton.textContent='ログアウト';logoutButton.style.backgroundColor='#dc3545';logoutButton.style.color='white';logoutButton.style.padding='10px 20px';logoutButton.style.border='none';logoutButton.style.borderRadius='5px';logoutButton.style.cursor='pointer';logoutButton.style.fontSize='16px';logoutButton.addEventListener('click',function(){if(confirm('本当にログアウトしますか？')){localStorage.removeItem('account');if(typeof secureAuth!=='undefined'){secureAuth.clearAuthData()} window.location.replace('https://matsuryo0619.github.io/scratchblog/Home.html')}});logoutSection.appendChild(logoutButton);settingsContainer.appendChild(logoutSection);const deleteSection=document.createElement('div');deleteSection.style.marginBottom='30px';deleteSection.style.padding='15px';deleteSection.style.backgroundColor='#fff';deleteSection.style.borderRadius='5px';deleteSection.style.border='2px solid #dc3545';const deleteTitle=document.createElement('h3');deleteTitle.textContent='危険な操作';deleteTitle.style.marginBottom='15px';deleteTitle.style.color='#dc3545';deleteSection.appendChild(deleteTitle);const deleteDescription=document.createElement('p');deleteDescription.textContent='アカウントを削除すると、すべてのデータが永久に失われます。この操作は取り消すことができません。';deleteDescription.style.marginBottom='15px';deleteDescription.style.color='#666';deleteSection.appendChild(deleteDescription);const deleteButton=document.createElement('button');deleteButton.textContent='アカウントを削除';deleteButton.style.backgroundColor='#dc3545';deleteButton.style.color='white';deleteButton.style.padding='10px 20px';deleteButton.style.border='none';deleteButton.style.borderRadius='5px';deleteButton.style.cursor='pointer';deleteButton.style.fontSize='16px';deleteButton.addEventListener('click',function(){const confirmation1=confirm('本当にアカウントを削除しますか？この操作は取り消すことができません。');if(confirmation1){const confirmation2=confirm('最終確認：アカウントを削除すると、すべてのデータが永久に失われます。本当に削除しますか？');if(confirmation2){const passwordPrompt=prompt('アカウント削除を実行するには、現在のパスワードを入力してください：');if(passwordPrompt){deleteAccount(passwordPrompt)}}}});async function deleteAccount(password){try{deleteButton.disabled=!0;deleteButton.textContent='削除中...';const accountData=await getCurrentAccountData(currentUsername);if(!accountData){alert('アカウント情報の取得に失敗しました。');deleteButton.disabled=!1;deleteButton.textContent='アカウントを削除';return} const isPasswordValid=await verifyCurrentPassword(password,accountData.hashedPassword,accountData.salt);if(!isPasswordValid){alert('パスワードが間違っています。');deleteButton.disabled=!1;deleteButton.textContent='アカウントを削除';return} alert('アカウント削除の実装には追加の設定が必要です。管理者にお問い合わせください。');deleteButton.disabled=!1;deleteButton.textContent='アカウントを削除'}catch(error){console.error('アカウント削除エラー:',error);alert('アカウント削除中にエラーが発生しました。');deleteButton.disabled=!1;deleteButton.textContent='アカウントを削除'}} deleteSection.appendChild(deleteButton);settingsContainer.appendChild(deleteSection);document.body.appendChild(settingsContainer);getCurrentAccountData(currentUsername).then(accountData=>{const createdDateSpan=document.getElementById('account_created_date');if(accountData&&accountData.createdDate){try{const date=new Date(accountData.createdDate);createdDateSpan.textContent=date.toLocaleString('ja-JP')}catch(error){createdDateSpan.textContent='不明'}}else{createdDateSpan.textContent='不明'}}).catch(error=>{console.error('作成日時取得エラー:',error);const createdDateSpan=document.getElementById('account_created_date');createdDateSpan.textContent='取得に失敗しました'})}}})
