(function(){'use strict';async function waitForD3(timeout=5000){const intervalMs=100;const maxAttempts=timeout/intervalMs;let attempts=0;return new Promise((resolve,reject)=>{const check=()=>{if(window.d3){resolve(window.d3)}else{attempts++;if(attempts>=maxAttempts){reject(new Error('d3が読み込まれてないやん！'))}else{setTimeout(check,intervalMs)}}};check()})} class LightweightSecureAuth{constructor(){this.BASE_URL='https://matsuryo0619.github.io/scratchblog/';this.GOOGLE_SHEET_CSV_URL='https://docs.google.com/spreadsheets/d/1E0MjL8CXf-_pF3Lf1K1-w0pMx3EEaLO_zimIPpIkkPk/export?format=csv&range=A1:D';this.TOKEN_EXPIRY=24*60*60*1000;this.authCache=null;this.lastCheck=0;this.CACHE_DURATION=5*60*1000;this.ACCOUNTS_URL=this.BASE_URL+'accounts.html';this.HOME_URL=this.BASE_URL+'Home.html'} async quickAuthCheck(){const now=Date.now();if(this.authCache&&(now-this.lastCheck)<this.CACHE_DURATION){return this.authCache} const authData=this.getAuthData();if(!authData){this.authCache={isValid:!1,reason:'No auth data'};this.lastCheck=now;return this.authCache} if(navigator.onLine){this.performDetailedCheck(authData).then(result=>{this.authCache=result;this.lastCheck=Date.now()})} this.authCache={isValid:!0,username:authData.username,sessionToken:authData.sessionToken,requiresVerification:navigator.onLine};this.lastCheck=now;return this.authCache} async performDetailedCheck(authData){try{const accountExists=await this.verifyAccountExists(authData.username);if(!accountExists){this.clearAuthData();return{isValid:!1,reason:'Account not found'}} return{isValid:!0,username:authData.username,sessionToken:authData.sessionToken}}catch(error){console.warn('バックグラウンド認証チェック失敗:',error);return{isValid:!0,username:authData.username,sessionToken:authData.sessionToken,offline:!0}}} generateBrowserFingerprint(){try{const simple=navigator.userAgent.substring(0,50)+navigator.language+screen.width+'x'+screen.height;return btoa(simple).substring(0,24)}catch{return'fallback_'+Date.now().toString(36)}} getAuthData(){try{const authDataStr=localStorage.getItem('authData');if(!authDataStr) return null;const authData=JSON.parse(authDataStr);if(Date.now()-authData.timestamp>this.TOKEN_EXPIRY){this.clearAuthData();return null} return authData}catch(error){this.clearAuthData();return null}} clearAuthData(){localStorage.removeItem('authData');localStorage.removeItem('account');this.authCache=null} setAuthData(username,sessionToken){const authData={username,sessionToken,timestamp:Date.now(),fingerprint:this.generateBrowserFingerprint()};localStorage.setItem('authData',JSON.stringify(authData));localStorage.setItem('account',username);this.authCache={isValid:!0,username,sessionToken};this.lastCheck=Date.now()} async verifyAccountExists(username){const d3=await waitForD3();try{const timestamp=Date.now();const data=await d3.csv(`${this.GOOGLE_SHEET_CSV_URL}&_t=${timestamp}`);return data.some(row=>row.ユーザー名?.trim().toLowerCase()===username.toLowerCase())}catch(error){console.error('アカウント確認エラー:',error.message||error);return!1}} generateSessionToken(){const array=new Uint8Array(32);window.crypto.getRandomValues(array);return Array.from(array,byte=>byte.toString(16).padStart(2,'0')).join('')} startLightweightMonitoring(){document.addEventListener('visibilitychange',()=>{if(!document.hidden){this.authCache=null}});setInterval(async()=>{if(navigator.onLine&&!document.hidden){const authResult=await this.quickAuthCheck();if(!authResult.isValid){this.handleAuthFailure()}}},15*60*1000)} handleAuthFailure(){console.warn('認証失敗：ログイン画面にリダイレクト');const redirectToLogin=()=>{window.location.href=this.ACCOUNTS_URL+'?type=login'};if(document.hasFocus()){setTimeout(redirectToLogin,1000)}else{document.addEventListener('focus',redirectToLogin,{once:!0})}} buildUrl(page,params=''){const url=this.BASE_URL+page;return params?`${url}?${params}`:url} isAuthRequiredPage(){const authRequiredPages=['Home.html','profile.html','settings.html','post.html'];const currentPath=window.location.pathname;return authRequiredPages.some(page=>currentPath.includes(page))}} window.secureAuth=new LightweightSecureAuth();window.dispatchEvent(new CustomEvent('authSystemReady',{detail:{auth:window.secureAuth}}));if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',()=>{window.secureAuth.startLightweightMonitoring()})}else{window.secureAuth.startLightweightMonitoring()}})()
