
(function(){"use strict";async function a(e=5e3){const t=100,n=e/t;let s=0;return new Promise((e,r)=>{const o=()=>{window.d3?e(window.d3):(s++,s>=n?r(new Error("d3が読み込まれていません")):setTimeout(o,t))};o()})}class LightweightSecureAuth{constructor(){this.BASE_URL="https://Sugosuku.github.io/scratchblog/",this.GOOGLE_SHEET_CSV_URL="https://docs.google.com/spreadsheets/d/1E0MjL8CXf-_pF3Lf1K1-w0pMx3EEaLO_zimIPpIkkPk/export?format=csv&range=A1:D1000",this.TOKEN_EXPIRY=864e5,this.authCache=null,this.lastCheck=0,this.CACHE_DURATION=3e5,this.ACCOUNTS_URL=this.BASE_URL+"accounts.html",this.HOME_URL=this.BASE_URL+"Home.html"}async quickAuthCheck(){const e=Date.now();if(this.authCache&&e-this.lastCheck<this.CACHE_DURATION)return this.authCache;const t=this.getAuthData();if(!t)return this.authCache={isValid:!1,reason:"No auth data"},this.lastCheck=e,this.authCache;return navigator.onLine&&this.performDetailedCheck(t).then(e=>{this.authCache=e,this.lastCheck=Date.now()}).catch(e=>{console.error("バックグラウンド認証チェックエラー:",e)}),this.authCache={isValid:!0,username:t.username,sessionToken:t.sessionToken,requiresVerification:navigator.onLine},this.lastCheck=e,this.authCache}async performDetailedCheck(e){try{const t=Date.now()-e.timestamp;if(t<6e4)return console.log(false, "新規登録直後のため、アカウント確認をスキップ"),{isValid:!0,username:e.username,sessionToken:e.sessionToken,newRegistration:!0};if(!await this.verifyAccountExists(e.username))return this.clearAuthData(),{isValid:!1,reason:"Account not found"};return{isValid:!0,username:e.username,sessionToken:e.sessionToken}}catch(t){return console.warn("バックグラウンド認証チェック失敗:",t),{isValid:!0,username:e.username,sessionToken:e.sessionToken,offline:!0}}}generateBrowserFingerprint(){try{const e=navigator.userAgent.substring(0,50)+navigator.language+screen.width+"x"+screen.height;return btoa(e).substring(0,24)}catch{return"fallback_"+Date.now().toString(36)}}getAuthData(){try{const e=localStorage.getItem("authData");if(!e)return null;const t=JSON.parse(e);return Date.now()-t.timestamp>this.TOKEN_EXPIRY?(this.clearAuthData(),null):t}catch(e){return console.error("認証データ取得エラー:",e),this.clearAuthData(),null}}clearAuthData(){localStorage.removeItem("authData"),localStorage.removeItem("account"),this.authCache=null}setAuthData(e,t){const n={username:e,sessionToken:t,timestamp:Date.now(),fingerprint:this.generateBrowserFingerprint()};localStorage.setItem("authData",JSON.stringify(n)),localStorage.setItem("account",e),this.authCache={isValid:!0,username:e,sessionToken:t},this.lastCheck=Date.now()}async verifyAccountExists(e){let t;try{t=await a()}catch(e){throw console.error("D3.js読み込みエラー:",e),new Error("D3.jsが利用できません")}try{const n=Date.now(),s=`${this.GOOGLE_SHEET_CSV_URL}&_t=${n}`;console.log(false, "CSVを取得中:",s);const r=await t.csv(s);if(!r||0===r.length)return console.warn("CSVデータが空です"),!1;console.log(false, "取得したCSVデータ:",r[0]);const o=["アカウント名","ユーザー名","username","Username","user_name"];for(const t of o){if(r.some(n=>{const s=n[t];return s&&s.trim().toLowerCase()===e.toLowerCase()}))return console.log(`ユーザー "${e}" が見つかりました (フィールド: ${t})`),!0}return console.log(`ユーザー "${e}" は見つかりませんでした`),console.log(false, "利用可能なフィールド:",Object.keys(r[0]||{})),!1}catch(e){if(console.error("アカウント確認エラー:",e),e.message.includes("CORS")||e.message.includes("Network"))throw new Error("ネットワークエラー: Google Sheetsにアクセスできません");throw new Error(`CSVデータ取得エラー: ${e.message}`)}}generateSessionToken(){const e=new Uint8Array(32);return window.crypto.getRandomValues(e),Array.from(e,e=>e.toString(16).padStart(2,"0")).join("")}startLightweightMonitoring(){document.addEventListener("visibilitychange",()=>{document.hidden||(this.authCache=null)}),setInterval(async()=>{if(navigator.onLine&&!document.hidden)try{(await this.quickAuthCheck()).isValid||this.handleAuthFailure()}catch(e){console.error("定期認証チェックエラー:",e)}},9e5)}handleAuthFailure(){console.warn("認証失敗：ログイン画面にリダイレクト");const e=()=>{window.location.href=this.ACCOUNTS_URL+"?type=login"};document.hasFocus()?setTimeout(e,1e3):document.addEventListener("focus",e,{once:!0})}buildUrl(e,t=""){const n=this.BASE_URL+e;return t?`${n}?${t}`:n}isAuthRequiredPage(){const e=["Home.html","profile.html","settings.html","post.html"];return e.some(e=>window.location.pathname.includes(e))}}window.secureAuth=new LightweightSecureAuth,window.dispatchEvent(new CustomEvent("authSystemReady",{detail:{auth:window.secureAuth}})),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{window.secureAuth.startLightweightMonitoring()}):window.secureAuth.startLightweightMonitoring()})();
